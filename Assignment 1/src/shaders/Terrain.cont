#version 400

layout(vertices = 4) out;  /* Each patch has 4 verticies */

/* Program Uniforms */
uniform vec4 eyePos;  /* Eye view */
uniform int cracking_state;


void main()
{
    const float zmin = 0, zmax = 100;

    vec3 avg_n = (gl_in[0].gl_Position.xyz
                + gl_in[1].gl_Position.xyz
                + gl_in[2].gl_Position.xyz
                + gl_in[3].gl_Position.xyz) / 4 + eyePos.z;

    float dist_avg = distance(vec3(eyePos.x, eyePos.y, eyePos.z), avg_n);
    float dist_camera = length(vec3(eyePos.x, eyePos.y, eyePos.z));  /* Pos. relative to camera - Fixes cracking */

    /* Toggle cracking */
    float dist;
    if (cracking_state == 1)
        dist = dist_avg;
    else
        dist = dist_camera;


    gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;

    /* Tess level */ 
    float level = int((dist - zmin) * 10.0 / (zmin - zmax)) + int(eyePos.w);

    gl_TessLevelOuter[0] = level;
    gl_TessLevelOuter[1] = level;
    gl_TessLevelOuter[2] = level;
    gl_TessLevelOuter[3] = level;
    gl_TessLevelInner[0] = level;
    gl_TessLevelInner[1] = level;
}

